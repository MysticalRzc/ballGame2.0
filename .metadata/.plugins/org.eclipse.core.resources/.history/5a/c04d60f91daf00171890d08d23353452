package communication.udpCommunication;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class UdpCommunnication {

	final private static String regEx = "^(1\\d{2}|2[0-4]\\d|25[0-5]|[1-9]\\d|[1-9])\\.(1\\d{2}|2[0-4]\\d|25[0-5]|[1-9]\\d|\\d)\\.(1\\d{2}|2[0-4]\\d|25[0-5]|[1-9]\\d|\\d)\\.(1\\d{2}|2[0-4]\\d|25[0-5]|[1-9]\\d|\\d)$";
	private Thread reTh;
	private Thread seTh;
	static String sendMess = "";

	public UdpCommunnication() {
		super();
	}

	public UdpCommunnication(String address, int port) throws Exception {
		super();

		if (port < 0 || port >= 65535)
			throw new Exception("address error!");
		Pattern p = Pattern.compile(regEx);
		Matcher m = p.matcher(address);
		if(!m.find())
			throw new Exception("port error!");
			this.reTh = new Thread(new UdpReceiveThread(), "receiveThread");
		this.seTh = new Thread(new UdpSendThread(address, port), "sendThread");
	}
	
	public void udpBuild(String address,int port)
	{
		this.reTh = new Thread(new UdpReceiveThread(), "receiveThread");
		this.seTh = new Thread(new UdpSendThread("127.0.0.1", 5678),"sendThread");
	}
	
	public void receive() {
		reTh.start();
	}

	public void send(String mess) {
		if (!seTh.isAlive())
			seTh.start();
		sendMess = mess;
	}

	public void send(String mess, String address, int port) {
		if (!seTh.isAlive())
			seTh.start();
		sendMess = mess;
	}

	static protected void setMessage(String message) { // kid visited only
		System.out.println(message.substring(0, 8));
		System.out.println(message.substring(8));
	}
}
